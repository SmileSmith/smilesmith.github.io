(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{274:function(a,s,t){"use strict";t.r(s);var e=t(0),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"批量修改git提交记录中的用户和密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量修改git提交记录中的用户和密码"}},[a._v("#")]),a._v(" 批量修改Git提交记录中的用户和密码")]),a._v(" "),t("h2",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),t("p",[a._v("因为经常在家办公，修改密码的时候不小心把Git中的用户名和邮箱都改成了公司的用户名和邮箱（如下）。导致在提交Github时，使用了公司的信息，造成不良影响。")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 当公司密码修改后，Git提示Auth失败，这时候经常用下面的方式重置Git缓存的密码")]),a._v("\n\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 然后重新输入用户名和密码")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[a._v("#")]),a._v(" 解决办法")]),a._v(" "),t("p",[a._v("解决的方法分为3步：")]),a._v(" "),t("ol",[t("li",[a._v("修改项目根目录下Git的用户名和邮箱")]),a._v(" "),t("li",[a._v("编写执行脚本批量替换Git的用户名和邮箱")]),a._v(" "),t("li",[a._v("强制Push")])]),a._v(" "),t("h3",{attrs:{id:"_1-修改当前目录下git的用户名和邮箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改当前目录下git的用户名和邮箱"}},[a._v("#")]),a._v(" 1. 修改当前目录下Git的用户名和邮箱")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'SmileSmith'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'longde_chen@163.com'")]),a._v("\n")])])]),t("h3",{attrs:{id:"_2-修改当前目录下git的用户名和邮箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改当前目录下git的用户名和邮箱"}},[a._v("#")]),a._v(" 2. 修改当前目录下Git的用户名和邮箱")]),a._v(" "),t("p",[a._v("编写如下shell脚本，放到项目根目录下：")]),a._v(" "),t("ul",[t("li",[a._v("OLD_EMAIL:错误的邮箱")]),a._v(" "),t("li",[a._v("CORRECT_NAME:正确的作者名")]),a._v(" "),t("li",[a._v("CORRECT_EMAIL:正确的邮箱")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#!/bin/sh")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" filter-branch --env-filter "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'\n\nOLD_EMAIL="error@error.com"\nCORRECT_NAME="SmileSmith"\nCORRECT_EMAIL="longde_chen@163.com"\n\nif [ "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GIT_COMMITTER_EMAIL")]),a._v('" = "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$OLD_EMAIL")]),a._v('" ]\nthen\nexport GIT_COMMITTER_NAME="'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CORRECT_NAME")]),a._v('"\nexport GIT_COMMITTER_EMAIL="'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CORRECT_EMAIL")]),a._v('"\nfi\nif [ "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GIT_AUTHOR_EMAIL")]),a._v('" = "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$OLD_EMAIL")]),a._v('" ]\nthen\nexport GIT_AUTHOR_NAME="'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CORRECT_NAME")]),a._v('"\nexport GIT_AUTHOR_EMAIL="'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CORRECT_EMAIL")]),a._v("\"\nfi\n'")]),a._v(" --tag-name-filter "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" -- --branches --tags\n\n")])])]),t("p",[a._v("命名为fix.sh放到根目录，执行shell脚本。")]),a._v(" "),t("ul",[t("li",[a._v("如果提示"),t("code",[a._v("permission deny")]),a._v("等没权限，在shell下添加文件权限：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v(" fix.sh\n")])])]),t("ul",[t("li",[a._v("如果提示shell脚本执行失败，执行如下：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" filter-branch -f --index-filter "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'git rm --cached --ignore-unmatch Rakefile'")]),a._v(" HEAD\n")])])]),t("h3",{attrs:{id:"_3-将修改强制push到远程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-将修改强制push到远程"}},[a._v("#")]),a._v(" 3. 将修改强制Push到远程")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --force --all\n")])])]),t("h2",{attrs:{id:"验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[a._v("#")]),a._v(" 验证")]),a._v(" "),t("p",[a._v("在项目根目录下执行")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);